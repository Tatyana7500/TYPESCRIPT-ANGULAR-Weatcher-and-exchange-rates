{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/index.ts","./src/app/core/models/index.ts","./src/app/core/services/exchange-rates.service.ts","./src/app/core/services/index.ts","./src/app/core/services/weather.service.ts","./src/app/exchange-rates/exchange-rates.component.ts","./src/app/exchange-rates/exchange-rates.component.html","./src/app/weather/weather.component.ts","./src/app/weather/weather.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherComponent } from \"./weather/weather.component\";\nimport { ExchangeRatesComponent } from \"./exchange-rates/exchange-rates.component\";\n\n\nconst routes: Routes = [\n  { path: 'weather', component: WeatherComponent },\n  { path: 'exchange-rates', component: ExchangeRatesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'info-portal';\n}\n","<h2>{{title}}</h2>\n<nav>\n  <a class=\"navigation-link\" routerLink=\"/exchange-rates\">EXCHANGE-RATES</a>\n  <a class=\"navigation-link\" routerLink=\"/weather\">WEATHER</a>\n</nav>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { ExchangeRatesComponent } from './exchange-rates/exchange-rates.component';\nimport { CoreModule } from './core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    ExchangeRatesComponent\n  ],\n  imports: [\n    CoreModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {\n  WeatherService,\n  ExchangeRatesService,\n} from './services';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n  ],\n  providers: [\n    WeatherService,\n    ExchangeRatesService,\n  ],\n  declarations: []\n})\nexport class CoreModule { }\n","export * from './services';\nexport * from './models';\nexport * from './core.module';\n","export * from './exchange-rate.model';\nexport * from './weather.model';\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {ExchangeRate} from \"../models\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExchangeRatesService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getExchangeRates(): Observable<ExchangeRate[]> {\n    return this.http.get<ExchangeRate[]>(environment.exchange_rates_api_url);\n  }\n}\n","export * from './exchange-rates.service';\nexport * from './weather.service';\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { environment } from \"../../../environments/environment\";\nimport {Weather} from \"../models\";\nimport {Capital} from \"../models/capital.model\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getWeather(city: string): Observable<Weather> {\n    const url = `${environment.weather_api_url}?city=${city}`;\n    return this.http.get<Weather>(url);\n  }\n\n  getCapitals(): Observable<Capital[]> {\n    return this.http.get<Capital[]>(environment.capitals_api_url);\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport {ExchangeRatesService} from \"../core/services\";\nimport {ExchangeRate} from \"../core/models\";\n\n@Component({\n  selector: 'app-exchange-rates',\n  templateUrl: './exchange-rates.component.html',\n  styleUrls: ['./exchange-rates.component.less']\n})\nexport class ExchangeRatesComponent implements OnInit {\n  exchangeRates: ExchangeRate[] = [];\n\n  constructor(\n    private exchangeRatesService: ExchangeRatesService,\n  ) {}\n\n  ngOnInit(): void {\n    this.exchangeRatesService.getExchangeRates()\n      .subscribe(data => this.exchangeRates = data);\n  }\n}\n","<h3>EXCHANGE-RATES</h3>\n<li *ngFor=\"let exchangeRate of exchangeRates\">\n  <span class=\"exchange-rate\">{{exchangeRate.baseCurrency}}</span>\n  <span class=\"exchange-rate\">{{exchangeRate.currency}}</span>\n  <span class=\"exchange-rate\">{{exchangeRate.saleRate}}</span>\n  <span class=\"exchange-rate\">{{exchangeRate.purchaseRate}}</span>\n</li>\n","import { Component, OnInit } from '@angular/core';\nimport {WeatherService} from \"../core/services\";\nimport {Weather} from \"../core/models\";\nimport {Capital} from \"../core/models/capital.model\";\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.less']\n})\nexport class WeatherComponent implements OnInit {\n  weather: Weather;\n  capitals: Capital[] = [];\n  selectedCapital: Capital = {\n    name: 'Kiev',\n    lat: 49,\n    lon: 32,\n  };\n\n  constructor(\n    private weatherService: WeatherService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getWeather();\n    this.getCapitals();\n  }\n\n  onCapitalChange(capital: string): void {\n    if (this.selectedCapital.name === capital) {\n      return;\n    }\n\n    this.selectedCapital = this.capitals.find(item => item.name === capital);\n    this.getWeather();\n  }\n\n  private getCapitals(): void {\n    this.weatherService.getCapitals().subscribe(data => {\n      this.capitals = data;\n    });\n  }\n\n  private getWeather(): void {\n    this.weatherService.getWeather(this.selectedCapital.name).subscribe(data => {this.weather = data});\n  }\n}\n","<h3>WEATHER</h3>\n<div>\n  <h4>City: {{weather?.location.name}}, {{weather?.location.country}}</h4>\n</div>\n<div>\n  <select class=\"capitals\" (change)=\"onCapitalChange($event.target.value)\">\n    <option *ngFor=\"let capital of capitals\" [selected]=\"selectedCapital.name === capital.name\">{{capital.name}}</option>\n  </select>\n</div>\n<div class=\"weather\">\n  <p class=\"temp\">\n    <span>temp: </span><span>{{weather?.current.temp_c}} &#8451;</span>\n  </p>\n  <p>\n    <span>wind: </span><span>{{weather?.current.wind_kph}} km/h {{weather?.current.wind_dir}}</span>\n  </p>\n  <p>\n    <span>{{weather && weather.current.is_day ? 'Day' : 'Night'}}</span>\n  </p>\n  <div class='weather-icon' [ngStyle]=\"{backgroundImage: 'url(' + weather?.current.condition.icon + ')'}\"></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  weather_api_url: 'http://localhost:5000/weather',\n  capitals_api_url: 'http://localhost:5000/capitals',\n  exchange_rates_api_url: 'http://localhost:5000/exchange-rates'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}